import typing

from .data import *

COLOR_BGR2GRAY: int

CAP_PROP_FPS: int

LINE_8: int = 8

ci_and_not_headless: bool

Point = typing.Tuple[int, int]
RgbPixel = typing.Tuple[int, int, int]
Frame = typing.List[RgbPixel]

def cvtColor(frame: Frame, color: int) -> Frame: ...
def imshow(window_name: typing.Optional[str], image: typing.Optional[Frame]) -> None: ...
def rectangle(image, start_point: Point, end_point: Point, color, thickness: typing.Optional[int]=1, line_type: typing.Optional[int]=LINE_8, shift: typing.Optional[int]=0): ...
def waitKey(delay:int) -> int: ...
def destroyAllWindows() -> None: ...

class CascadeClassifier:
    def __init__(self, filename: str) -> None: ...
    def detectMultiScale(self, frame: Frame, *, scaleFactor: typing.Optional[float], minNeighbors: typing.Optional[int]): ...

class VideoCapture:
    def __init__(self, camerano): ...
    def get(self, prop: int) -> float: ...
    def read(self) -> typing.Tuple[int, Frame]: ...
    def release(self) -> None: ...